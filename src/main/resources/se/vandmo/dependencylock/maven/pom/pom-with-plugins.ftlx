<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
    http://maven.apache.org/POM/4.0.0 @xsd_dest@/maven-v4_0_0_ext.xsd
    urn:se.vandmo.dependencylock @xsd_dest@/dependencylock.xsd"
  xmlns:dependency-lock="urn:se.vandmo.dependencylock"
  dependency-lock:version="2">
  <modelVersion>4.0.0</modelVersion>

<#macro parent_macro p indent><#local local_indent>${""?left_pad(indent * 2)}</#local>
${local_indent}<parent>
${local_indent}  <groupId>${p.artifactIdentifier.groupId}</groupId>
${local_indent}  <artifactId>${p.artifactIdentifier.artifactId}</artifactId>
${local_indent}  <version>${p.version}</version>
${local_indent}  <relativePath />
${local_indent}  <dependency-lock:integrity>${p.getIntegrityForLockFile()}</dependency-lock:integrity>
<#if p.parent??><@parent_macro p=p.parent indent=(indent + 1) />
</#if>${local_indent}</parent>
</#macro><#if parent??><@parent_macro p=parent indent=(1) />

</#if>
  <groupId>${pom.groupId}</groupId>
  <artifactId>${pom.artifactId}-dependency-lock</artifactId>
  <version>${pom.version}</version>

  <dependencies>
<#list dependencies as dependency>
    <dependency>
      <groupId>${dependency.artifactIdentifier.groupId}</groupId>
      <artifactId>${dependency.artifactIdentifier.artifactId}</artifactId>
      <version>${dependency.version}</version>
      <type>${dependency.artifactIdentifier.type}</type>
      <scope>${dependency.scope}</scope>
      <#if dependency.artifactIdentifier.classifier.isPresent()>
      <classifier>${dependency.artifactIdentifier.classifier.get()}</classifier>
      </#if>
      <optional>${dependency.optional?c}</optional>
      <dependency-lock:integrity>${dependency.getIntegrityForLockFile()}</dependency-lock:integrity>
    </dependency>
</#list>
  </dependencies>

  <build>
    <extensions>
<#list extensions as extension>
      <extension>
        <groupId>${extension.artifactIdentifier.groupId}</groupId>
        <artifactId>${extension.artifactIdentifier.artifactId}</artifactId>
        <version>${extension.version}</version>
        <dependency-lock:integrity>${extension.getIntegrityForLockFile()}</dependency-lock:integrity>
      </extension>
</#list>
    </extensions>
    <plugins>
<#list plugins as plugin>
      <plugin>
        <groupId>${plugin.artifactIdentifier.groupId}</groupId>
        <artifactId>${plugin.artifactIdentifier.artifactId}</artifactId>
        <version>${plugin.version}</version>
        <dependency-lock:integrity>${plugin.getIntegrityForLockFile()}</dependency-lock:integrity>
        <dependencies>
        <#list plugin.dependencies as dependency>
          <dependency>
            <groupId>${dependency.artifactIdentifier.groupId}</groupId>
            <artifactId>${dependency.artifactIdentifier.artifactId}</artifactId>
            <version>${dependency.version}</version>
            <type>${dependency.artifactIdentifier.type}</type>
            <#if dependency.artifactIdentifier.classifier.isPresent()>
            <classifier>${dependency.artifactIdentifier.classifier.get()}</classifier>
            </#if>
            <dependency-lock:integrity>${dependency.getIntegrityForLockFile()}</dependency-lock:integrity>
          </dependency>
        </#list>
        </dependencies>
      </plugin>
</#list>
    </plugins>
  </build>  
</project>
